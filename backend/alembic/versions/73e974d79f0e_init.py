"""init

Revision ID: 73e974d79f0e
Revises: ae483085bb9e
Create Date: 2025-06-19 00:19:45.578460

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '73e974d79f0e'
down_revision: Union[str, None] = 'ae483085bb9e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Company',
    sa.Column('company_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_table('EmploymentType',
    sa.Column('employment_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('employment_type_id')
    )
    op.create_table('ExperienceCategory',
    sa.Column('category_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('Location',
    sa.Column('location_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('location_id')
    )
    op.create_table('SalaryType',
    sa.Column('salary_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('salary_type_id')
    )
    op.create_table('Source',
    sa.Column('source_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('source_id')
    )
    op.create_table('Specialization',
    sa.Column('specialization_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('specialization', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('specialization_id')
    )
    op.create_table('User',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=True),
    sa.Column('hashed_password', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('Resume',
    sa.Column('resume_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('external_id', sa.String(length=100), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('salary_type_id', sa.Integer(), nullable=True),
    sa.Column('salary_currency', sa.String(length=50), nullable=True),
    sa.Column('salary_value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('skills_text', sa.Text(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('experience_category_id', sa.Integer(), nullable=True),
    sa.Column('education', sa.Text(), nullable=True),
    sa.Column('specialization_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('middle_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=50), nullable=True),
    sa.Column('published_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['experience_category_id'], ['ExperienceCategory.category_id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['Location.location_id'], ),
    sa.ForeignKeyConstraint(['salary_type_id'], ['SalaryType.salary_type_id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['Source.source_id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['Specialization.specialization_id'], ),
    sa.PrimaryKeyConstraint('resume_id')
    )
    op.create_table('Vacancy',
    sa.Column('vacancy_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('external_id', sa.String(length=100), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('salary_type_id', sa.Integer(), nullable=True),
    sa.Column('salary_currency', sa.String(length=50), nullable=True),
    sa.Column('salary_value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('experience_category_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('specialization_id', sa.Integer(), nullable=True),
    sa.Column('published_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('contacts', sa.Text(), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['Company.company_id'], ),
    sa.ForeignKeyConstraint(['experience_category_id'], ['ExperienceCategory.category_id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['Location.location_id'], ),
    sa.ForeignKeyConstraint(['salary_type_id'], ['SalaryType.salary_type_id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['Source.source_id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['Specialization.specialization_id'], ),
    sa.PrimaryKeyConstraint('vacancy_id')
    )
    op.create_table('User_Favorite_Resumes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('resume_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['resume_id'], ['Resume.resume_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'resume_id')
    )
    op.create_table('User_Favorite_Vacancies',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['Vacancy.vacancy_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'vacancy_id')
    )
    op.create_table('Vacancy_EmploymentType',
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('employment_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employment_type_id'], ['EmploymentType.employment_type_id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['Vacancy.vacancy_id'], ),
    sa.PrimaryKeyConstraint('vacancy_id', 'employment_type_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Vacancy_EmploymentType')
    op.drop_table('User_Favorite_Vacancies')
    op.drop_table('User_Favorite_Resumes')
    op.drop_table('Vacancy')
    op.drop_table('Resume')
    op.drop_table('User')
    op.drop_table('Specialization')
    op.drop_table('Source')
    op.drop_table('SalaryType')
    op.drop_table('Location')
    op.drop_table('ExperienceCategory')
    op.drop_table('EmploymentType')
    op.drop_table('Company')
    # ### end Alembic commands ###
